name: eposter_web CI/CD  # Actions名称

on: # 执行时机
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # 手动触发部署
  workflow_dispatch:

jobs:
  build:
    # runs-on 指定job任务运行所需要的虚拟机环境(必填字段)
    name: 基于ubuntu-latest构建
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x] # 配置所需node版本

    steps:
      # 拉取代码
      - name: 切换分支 # 步骤名字
        # 使用action库  actions/checkout拉取源码
        uses: actions/checkout@v3
      
      # 安装依赖
      - name: install
        run: npm install pnpm -g && pnpm install --frozen-lockfile

      # 打包
      - name: build project
        run: pnpm run build
          echo "项目打包完成, 准备打包docker镜像" 

      # 登录阿里云镜像容器服务，打包镜像，推送镜像
      - name: 构建阿里云镜像
        run: |
          # 登录阿里云镜像容器服务
          docker login --username=${{ secrets.DOCKER_USERNAME }} registry.cn-hangzhou.aliyuncs.com --password=${{ secrets.DOCKER_PASSWORD }}
          # 使用当前目录的 Dockerfile 创建镜像，标签为 espoter_web:latest
          docker build -t espoter_web:latest . 
          # 打标签
          docker tag espoter_web registry.cn-hangzhou.aliyuncs.com/momo_eposter/eposter_web:latest
          # 推送到阿里云镜像容器服务
          docker push registry.cn-hangzhou.aliyuncs.com/momo_eposter/eposter_web:latest
          echo 镜像上传成功
  pull-docker:
    # 登录服务器执行脚本
    needs: [build]
    name: '部署镜像'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 部署
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: cd /home/eposter_web/ && sh dockerBootstrap.sh ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_PASSWORD }}


